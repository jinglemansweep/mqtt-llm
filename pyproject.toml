[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mqtt-llm"
version = "0.1.0"
description = "MQTT to OpenAI-compatible LLM bridge for AI interactions"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "MQTT-LLM Contributors"}
]
keywords = ["mqtt", "llm", "openai", "ollama", "bridge", "ai", "openrouter"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.11"
dependencies = [
    "paho-mqtt>=1.6.1",
    "click>=8.1.0",
    "pydantic>=2.0.0",
    "aiohttp>=3.8.0",
    "jsonpath-ng>=1.5.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "flake8>=6.0.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "isort>=5.0.0",
    "bandit>=1.7.0",
    "pre-commit>=3.0.0",
]

[project.urls]
"Homepage" = "https://github.com/mqtt-llm/mqtt-llm"
"Bug Tracker" = "https://github.com/mqtt-llm/mqtt-llm/issues"

[project.scripts]
mqtt-llm = "mqtt_llm.main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 79
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "paho.mqtt.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "jsonpath_ng"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 79
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "build",
    "dist",
    "*.egg-info"
]
